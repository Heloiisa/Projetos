#pragma checksum "D:\CentralDuplicatas-master\Views\Cad\CadJuridico.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fa8ee421227207f3f1596dd0c04de0018c0b641f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Cad_CadJuridico), @"mvc.1.0.view", @"/Views/Cad/CadJuridico.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Cad/CadJuridico.cshtml", typeof(AspNetCore.Views_Cad_CadJuridico))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\CentralDuplicatas-master\Views\_ViewImports.cshtml"
using CentralDuplicatas;

#line default
#line hidden
#line 2 "D:\CentralDuplicatas-master\Views\_ViewImports.cshtml"
using CentralDuplicatas.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa8ee421227207f3f1596dd0c04de0018c0b641f", @"/Views/Cad/CadJuridico.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b8f04a559329bab731b14f0328caffd1e364e330", @"/Views/_ViewImports.cshtml")]
    public class Views_Cad_CadJuridico : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal mt3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/botao.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("height:90px;margin-right:10%"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\CentralDuplicatas-master\Views\Cad\CadJuridico.cshtml"
  
    ViewData["Title"] = "Cadastro jurídico";

#line default
#line hidden
            BeginContext(55, 1956, true);
            WriteLiteral(@"<style>

.box:hover {
  background-color: #FFFFFF;
  cursor: pointer;
  -webkit-transition: background-color 5s ease-out;
  -moz-transition: background-color 5s ease-out;
  -o-transition: background-color 5s ease-out;
  transition: background-color 5s ease-out;

}
</style>

<script src=""https://unpkg.com/vue""></script>
<script src=""//cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js""></script>

<section class=""container-fluid"" style=""background:deepskyblue;line-height:3.5;text-align:center;margin-down:10rem"">
    <div class=""container"">
        <titulocadastro id=""tabscadastrotitle""  class=""title"" style=""font-size:2rem;margin-top:5rem""><h1><b>Olá!</h1><h1>Preencha os campos para prosseguir</b></h1></titulocadastro>
    </div>
    <div class=""hero-foot"">
        <ul style=""list-style-type:none"">
            <div class=""container mt4"">
                <div class=""row .row-300"">
                    <div class=""col-sm-4"">
                        <div class=""box"" style="":hover{backg");
            WriteLiteral(@"round-color:#FFFFFF}"">
                            <li class=""tab is-active"" onclick=""openTab(event,'WebDev')"">
                            <a>Dados da Empresa</a></li>
                        </div>
                    </div>
                    <div class=""col-sm-4"">
                        <div class=""box"">
                            <li class=""tab"" onclick=""openTab(event,'cadastroadministrador')""><a>Dados do Administrador</a></li>
                        </div>
                    </div>
                    <div class=""col-sm-4"">
                        <div class=""box"">
                            <li class=""tab"" onclick=""openTab(event,'cadastrousuarios')""><a>Dados do Usuário</a></li>
                        </div>
                    </div>
                </div>
            </div>
        </ul>
    </div>
</section>
<div id=""WebDev"" class=""content-tab"">
    <div class="""" id=""cad"">
        ");
            EndContext();
            BeginContext(2011, 7503, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "653fa216ac6b40d9a47cf3959bbb52c5", async() => {
                BeginContext(2017, 1307, true);
                WriteLiteral(@"
            <div v-if=""step === 1"">
                <div id=""cadastro"">
                    <div class=""container"">
                        <div class=""row"">
                            <div class=""col-sm-6"">
                                <div class=""mt5"">
                                    <div class=""mt4"">
                                        <label class=""label mt3"">CNPJ</label>
                                        <input class=""form-control"" data-validate=""cnpj"" placeholder=""00.000.000/0000-00"" v-model=""dados.entity.cnpj"">
                                        <label class=""label mt3"">Razão Social</label>
                                        <input class=""form-control"" data-validate=""text"" v-model=""dados.entity.fullname"">
                                        <label class=""label mt3"">Nome Fantasia</label>
                                        <input class=""form-control"" data-validate=""text"" v-model=""dados.entity.aliasname"">                                       
          ");
                WriteLiteral(@"                              <label class=""label mt2"">Atividade</label>
                                        <div class=""form-group"">
                                            <select id=""disabledSelect"" class=""form-control"">
                                                ");
                EndContext();
                BeginContext(3324, 32, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3c3ee51eb784430aa0dd4a786136c037", async() => {
                    BeginContext(3332, 15, true);
                    WriteLiteral("Disabled select");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(3356, 2662, true);
                WriteLiteral(@"
                                            </select>
                                        </div>
                                        <div>
                                            <label class=""label mt1"">Email</label>
                                            <input class=""form-control"" v-model=""dados.emails.address"">
                                            <div v-for=""(telephones, index) in dados.telephones"">
                                                <div class=""row"">
                                                    <div class=""col-sm-2"">
                                                    <label class=""label mt1"">DDD</label>
                                                    <input class=""form-control"" v-model=""telephones.ddd"">
                                                </div>
                                                <div class=""col-sm-6"">
                                                    <label class=""label mt1"">Telefone</label>
                     ");
                WriteLiteral(@"                               <input class=""form-control"" v-model=""telephones.number"">
                                                </div>
                                                <div class=""col-sm-4"">
                                                    <label class=""label mt1"">Adicionar campo</label>
                                                    <i class=""fa fa-trash fa-2x"" aria-hidden=""true"" v-on:click.prevent=""deleteUser(index)"" style=""padding-right: 1cm""></i>
                                                    <i class=""fa fa-plus fa-2x"" aria-hidden=""true""v-on:click.prevent=""addUser""></i>
                                                </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""mt4 mb5 column is-paddingless is-10-touch is-4-desktop flexd"">
                                            <button v-on:click.prevent=""");
                WriteLiteral(@"next()"" class=""btn btn-primary"">Próximo</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""col-sm-6"">
                                <infocadastro></infocadastro>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div v-if=""step === 2"">
                <div class=""container"">
                    <div class=""mt5"">
                        ");
                EndContext();
                BeginContext(6018, 1421, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "82b22c2616f24982810ee625ca07a309", async() => {
                    BeginContext(6052, 1380, true);
                    WriteLiteral(@"
                            <label class=""label mt1"">CEP</label>
                            <input class=""form-control"" v-model=""cep"" v-on:keyup=""searchCep()"" placeholder=""digite o cep aqui (sem hífen)"">
                            <span v-if=""message"" class=""help is-danger"">CEP não encontrado.</span>
                            <label class=""label mt1"">Cidade</label>
                            <input class=""form-control"" v-model=""dados.userInfoModel.address.city"">
                            <label class=""label mt1"">UF</label>
                            <input class=""form-control"" v-model=""dados.userInfoModel.address.state"">
                            <label class=""label mt1"">Endereço</label>
                            <input class=""form-control"" v-model=""dados.userInfoModel.address.thoroughfare"">
                            <label class=""label mt1"">Numero</label>
                            <input class=""form-control"" v-model=""dados.userInfoModel.address.number"">
                          ");
                    WriteLiteral(@"  <label class=""label mt1"">Bairro</label>
                            <input class=""form-control"" v-model=""dados.userInfoModel.address.neighborhood"">
                            <label class=""label mt1"">Complemento</label>
                            <input class=""form-control""v-model=""dados.userInfoModel.address.complement"">
                        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(7439, 1405, true);
                WriteLiteral(@"
                        <div class=""checkradio100 mt1"">
                            <input class=""is-checkradio is-info""id=""checkboxEmail"" type=""checkbox"" name=""checkboxEmail"">
                            <label for=""checkboxEmail"">Concordo em receber notificações por e-mail</label>
                        </div>
                        <div class=""mt3"">
                            <h4><b>ADESÃO</b></h4>
                            <p> Para prosseguir, é necessário dar aceite no termo de adesão, declarando estar <br> de acordo com as condicões de utilização da Central de Duplicatas</p>
                            <div class=""row mt2"">
                                <div class=""col-sm-2"">
                                    <p>Visualizar o termo de adesão</p>
                                </div>
                                <div class=""col-sm-10"">
                                    <i class=""fa fa-file-text-o fa-2x"" v-on:click=""modal = !modal"" aria-hidden=""true""></i>
                     ");
                WriteLiteral(@"           </div>
                            </div>
                            <div class=""row mt2"">
                                <div class=""col-md-2"">
                                    <p>Assinar termo de adesão com e-CNPJ</p>
                                </div>
                                    <div class=""col-sm-4"">
                                        ");
                EndContext();
                BeginContext(8844, 67, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "e55d832b0aee4757b1c3ba5f99ab2e64", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(8911, 596, true);
                WriteLiteral(@"
                                    </div>
                            </div>
                        </div>
                        <div class=""mt5 mb5 column is-paddingless is-10-touch is-4-desktop flexd"">
                                <button style=""min-width:120px"" v-on:click.prevent=""prev()"" class=""btn btn-primary"">Anterior</button>
                                <button style=""min-width:120px"" v-on:click.prevent=""submit()"" class=""btn btn-primary"">Salvar</button>
                        </div>
                    </div>
                </div>
            </div>
        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9514, 4171, true);
            WriteLiteral(@"
        
        <div v-bind:class=""{'is-active': modal}"" class=""modal"">
            <div class=""modal-background""></div>
                <div class=""modal-card"">
                    <header class=""modal-card-head"">
                    <p class=""modal-card-title"">Leia e concorde com os termos antes de prosseguir</p>
                    <button v-on:click=""modal = !modal"" class=""delete"" aria-label=""close""></button>
                    </header>
                    <section class=""modal-card-body"">
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta praesentium maiores sed beatae corporis est doloremque error, amet obcaecati quam aut natus odit exercitationem eveniet deleniti? Est, qui. Provident, pariatur?</p>
                                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta praesentium maiores sed beatae corporis est doloremque error, amet obcaecati quam aut natus odit exercitationem eveniet deleniti? Est, qui. Provident, pariatur");
            WriteLiteral(@"?</p>
                                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique omnis et at esse natus harum nulla autem? Iste quas sed, perspiciatis, dolore, omnis fugit aliquid commodi repellendus numquam ratione facilis!</p>
                                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliq");
            WriteLiteral(@"uid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beat");
            WriteLiteral(@"ae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>       
                                    <div class=""field mb2"">
                                    <div style=""text-align: center""> 
                                    <input  v-on:click=""termoschecked = !termoschecked"" class=""is-checkradio is-info"" id=""termoscheckbox"" type=""checkbox"" name=""termoscheckbox"">
                                    <label for=""termoscheckbox"">Concordo</label>
                                </div>
                                </section>
                        <footer class=""card-footer"">
                        <a v-bind:disabled=""termoschecked"" href=""#"" class=""button is-info card-footer-item"">Avançar</a>
                        </footer>
                </div>
            </div> 
            </div>
    </div>
</div>
<div");
            WriteLiteral(" id=\"cadastroadministrador\" class=\"content-tab\" style=\"display:none\">\r\n    ");
            EndContext();
            BeginContext(13685, 8412, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ee910b2b7f2f4bea9d3dc8d3126c9b7a", async() => {
                BeginContext(13691, 5031, true);
                WriteLiteral(@"
        <div v-if=""step === 1"">
            <div class=""mt5"">
                <div id=""cadastro"" >
                    <div class=""container"">
                        <div class=""row"">
                            <div class=""col-sm-6"">
                                <div class=""mt4"">
                                    <div>
                                        <label class=""label mt3"">CPF</label>
                                        <input class=""form-control"" data-validate=""cpf"" placeholder=""000.000.000-00"" v-model=""dados.document"">
                                        <label class=""label mt3"">Nome Completo</label>
                                        <input class=""form-control"" data-validate=""text"" v-model=""dados.fullName"">
                                        <label class=""label mt3"">Data de nascimento</label>
                                        <input class=""form-control"" data-validate=""date""v-model=""dados.birthDate"">
                            
                     ");
                WriteLiteral(@"               </div>
                                <div>
                                    <label class=""label mt2"">Email</label>
                                    <input class=""form-control"" v-model=""dados.emails.address"">
                                    <label class=""label mt2"">Confirmação Email</label>
                                    <input class=""form-control"" v-model=""dados.emails.address"">
                                    <div class=""row"">
                                        <div class=""col-sm-6"">
                                            <div class=""checkradio100 mt1"">
                                                <input class=""is-checkradio is-info"" id=""checkboxEmail"" type=""checkbox"" name=""checkboxEmail"">
                                                <label for=""checkboxEmail"">Receber notificações por e-mail</label>
                                            </div>
                                        </div>
                                         <div cla");
                WriteLiteral(@"ss=""col-sm-6"">
                                            <div class=""checkradio100 mt1"">
                                                <input class=""is-checkradio is-info"" id=""checkboxNews"" type=""checkbox"" name=""checkboxNews"">
                                                <label for=""checkboxNews"">Receber Newsletter</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div v-for=""(telephones, index) in dados.telephones"">
                                        <div class=""row"">
                                            <div class=""col-sm-2"">
                                            <label class=""label mt1"">DDD</label>
                                            <input class=""form-control"" v-model=""telephones.ddd"">
                                        </div>
                                        <div class=""col-sm-6"">
                                 ");
                WriteLiteral(@"           <label class=""label mt1"">Telefone</label>
                                            <input class=""form-control"" v-model=""telephones.number"">
                                        </div>
                                            <div class=""col-sm-4"">
                                                <label class=""label mt1"">Adicionar campo</label>
                                                <i class=""fa fa-trash fa-2x"" aria-hidden=""true"" v-on:click.prevent=""deleteUser(index)"" style=""padding-right: 1cm""></i>
                                                <i class=""fa fa-plus fa-2x"" aria-hidden=""true""v-on:click.prevent=""addUser""></i>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""control"">
                                        <div class=""checkradio100 mt1"">
                                            <input class=""is-checkradio is-info"" ");
                WriteLiteral(@"id=""checkboxSms"" type=""checkbox"" name=""checkboxSms"">
                                            <label for=""checkboxSms"">Receber notificações por SMS</label>
                                        </div>
                                    </div>
                                </div>
                                <div class=""mt4 mb5 column is-paddingless is-10-touch is-4-desktop flexd"">
                                    <button v-on:click.prevent=""next()"" class=""btn btn-primary"">Próximo</button>
                                </div>
                                </div>
                            </div>
                            <infocadastro></infocadastro>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div v-if=""step === 2"">
            <div class=""container"">
                <div class=""mt5"">
                    ");
                EndContext();
                BeginContext(18722, 1357, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f8153521a1cd43b7b1049df567407da3", async() => {
                    BeginContext(18756, 1316, true);
                    WriteLiteral(@"
                        <label class=""label mt1"">CEP</label>
                        <input class=""form-control"" v-model=""cep"" v-on:keyup=""searchCep()"" placeholder=""digite o cep aqui (sem hífen)"">
                        <span v-if=""message"" class=""help is-danger"">CEP não encontrado.</span>
                        <label class=""label mt1"">Cidade</label>
                        <input class=""form-control"" v-model=""dados.userInfoModel.address.city"">
                        <label class=""label mt1"">UF</label>
                        <input class=""form-control"" v-model=""dados.userInfoModel.address.state"">
                        <label class=""label mt1"">Endereço</label>
                        <input class=""form-control"" v-model=""dados.userInfoModel.address.thoroughfare"">
                        <label class=""label mt1"">Numero</label>
                        <input class=""form-control"" v-model=""dados.userInfoModel.address.number"">
                        <label class=""label mt1"">Bairro</label>
     ");
                    WriteLiteral(@"                   <input class=""form-control"" v-model=""dados.userInfoModel.address.neighborhood"">
                        <label class=""label mt1"">Complemento</label>
                        <input class=""form-control""v-model=""dados.userInfoModel.address.complement"">
                    ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(20079, 1340, true);
                WriteLiteral(@"
                    <div class=""checkradio100 mt1"">
                        <input class=""is-checkradio is-info""id=""checkboxEmail"" type=""checkbox"" name=""checkboxEmail"">
                        <label for=""checkboxEmail"">Concordo em receber notificações por e-mail</label>
                    </div>
                    <div class=""mt3"">
                            <h4><b>ADESÃO</b></h4>
                            <p> Para prosseguir, é necessário dar aceite no termo de adesão, declarando estar <br> de acordo com as condicões de utilização da Central de Duplicatas</p>
                            <div class=""row mt2"">
                                <div class=""col-sm-2"">
                                    <p>Visualizar o termo de adesão</p>
                                </div>
                                <div class=""col-sm-10"">
                                    <i class=""fa fa-file-text-o fa-2x"" v-on:click=""modal = !modal"" aria-hidden=""true""></i>
                                </div>
 ");
                WriteLiteral(@"                           </div>
                            <div class=""row mt2"">
                                <div class=""col-sm-3"">
                                    <p>Assinar termo de adesão com e-CNPJ</p>
                               <div class=""col-sm-4"">
                                        ");
                EndContext();
                BeginContext(21419, 67, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "f9e2e437c26e4d3aa0bb52ef47e9ae46", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(21486, 604, true);
                WriteLiteral(@"
                                </div>
                            </div>
                        </div>
                        <div class=""mt5 mb5 column is-paddingless is-10-touch is-4-desktop flexd"">
                                <button style=""min-width:120px"" v-on:click.prevent=""prev()"" class=""btn btn-primary"">Anterior</button>
                                <button style=""min-width:120px"" v-on:click.prevent=""submit()"" class=""btn btn-primary"">Salvar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(22097, 3833, true);
            WriteLiteral(@"
        
    <div v-bind:class=""{'is-active': modal}"" class=""modal"">
      <div class=""modal-background""></div>
      <div class=""modal-card"">
        <header class=""modal-card-head"">
          <p class=""modal-card-title"">Leia e concorde com os termos antes de prosseguir</p>
          <button v-on:click=""modal = !modal"" class=""delete"" aria-label=""close""></button>
        </header>
        <section class=""modal-card-body"">
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta praesentium maiores sed beatae corporis est doloremque error, amet obcaecati quam aut natus odit exercitationem eveniet deleniti? Est, qui. Provident, pariatur?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta praesentium maiores sed beatae corporis est doloremque error, amet obcaecati quam aut natus odit exercitationem eveniet deleniti? Est, qui. Provident, pariatur?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique omn");
            WriteLiteral(@"is et at esse natus harum nulla autem? Iste quas sed, perspiciatis, dolore, omnis fugit aliquid commodi repellendus numquam ratione facilis!</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? ");
            WriteLiteral(@"Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedi");
            WriteLiteral(@"ta provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>       
                        <div class=""field mb2"">
                        <div style=""text-align: center""> 
                        <input  v-on:click=""termoschecked = !termoschecked"" class=""is-checkradio is-info"" id=""termoscheckbox"" type=""checkbox"" name=""termoscheckbox"">
                        <label for=""termoscheckbox"">Concordo</label>
                    </div>
                     </section>
            <footer class=""card-footer"">
            <a v-bind:disabled=""termoschecked"" href=""#"" class=""btn btn-primary"">Avançar</a>
            </footer>
      </div>
    </div> 
</div>
<div id=""cadastrousuarios"" class=""content-tab"" style=""display:none"">
    ");
            EndContext();
            BeginContext(25930, 4644, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8c46b553290a476fbb91c42e501431c4", async() => {
                BeginContext(25936, 4631, true);
                WriteLiteral(@"
        <div class=""container mt2"">
            <div class=""mt2"">
                <div v-for=""(user, index) in users"" style=""border:solid;border-color:#c0c0c0;padding:60px;margin-top:4vh"">
                    <label class=""label mt3"">CPF</label>
                    <input class=""form-control"" data-validate=""cpf"" placeholder=""000.000.000-00"" v-model=""user.cpf"">
                    <label class=""label mt3"">Nome completo</label>
                    <input class=""form-control"" data-validate=""text"" v-model=""user.nome"">
                    <label class=""label mt3"">Celular</label>
                    <input class=""form-control"" data-validate=""brPhone"" v-model=""user.celular"">
                    <label class=""label mt3"">E-mail</label>
                    <input class=""form-control"" v-model=""user.email"">
                    <label class=""label mt3"">Confirmar e-mail</label>
                    <input class=""form-control""  v-model=""user.confirmaremail"">
                    <label class=""label mt3"">Autoriz");
                WriteLiteral(@"ações</label>
                    <div class=""container"">
                        <div class=""row"">
                            <div class=""col-sm-6"">
                                <div class=""checkradio100 mt1"">
                                    <input style=""margin:center"" class=""is-checkradio is-info"" id=""checkboxValidar"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxValidar"">Carregar e validar duplicatas</label>
                                </div>
                            </div>
                            <div class=""col-sm-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxAceite"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxAceite"">Dar aceite/recusar duplicata</label>
                                </div>
                            </div>
                        </div>
    ");
                WriteLiteral(@"                    <div class=""row"">
                            <div class=""col-sm-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxAutorizar"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxAutorizar"">Autorizar transferência de titularidades de duplicatas</label>
                                </div>
                            </div>
                            <div class=""col-sm-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxInformar"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxInformar"">Informar entrega e liquidação</label>
                                </div>
                            </div>
                        </div>
                        <div class=""row"">
             ");
                WriteLiteral(@"               <div class=""col-sm-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxEnviar"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxEnviar"">Enviar duplicatas para Protesto</label>
                                </div>
                            </div>
                            <div class=""col-sm-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxEndosso"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxEndosso"">Informar endosso</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""container mt4"">
            <div class=""mb4");
                WriteLiteral(@""" style=""text-align: center"">
                <div style=""text-align: center"">
                    <button style=""min-width:120px"" class=""btn btn-primary"" v-on:click.prevent=""deleteUser(index)"">Deletar</button>
                    <button style=""min-width:120px"" class=""btn btn-primary"" v-on:click.prevent=""addUser"">Novo Usuário</button>
                    <button style=""min-width:120px"" class=""btn btn-primary"" v-on:click.prevent=""enviar"">Enviar convite</button>
                </div>
            </div>
        </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(30574, 12, true);
            WriteLiteral("\r\n</div>\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
