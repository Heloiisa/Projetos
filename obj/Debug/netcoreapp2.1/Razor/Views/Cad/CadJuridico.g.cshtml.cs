#pragma checksum "D:\CentralDuplicatas-master\Views\Cad\CadJuridico.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ea2a44cdc5bb07503d54737b2122436702697370"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Cad_CadJuridico), @"mvc.1.0.view", @"/Views/Cad/CadJuridico.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Cad/CadJuridico.cshtml", typeof(AspNetCore.Views_Cad_CadJuridico))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\CentralDuplicatas-master\Views\_ViewImports.cshtml"
using CentralDuplicatas;

#line default
#line hidden
#line 2 "D:\CentralDuplicatas-master\Views\_ViewImports.cshtml"
using CentralDuplicatas.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ea2a44cdc5bb07503d54737b2122436702697370", @"/Views/Cad/CadJuridico.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b8f04a559329bab731b14f0328caffd1e364e330", @"/Views/_ViewImports.cshtml")]
    public class Views_Cad_CadJuridico : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal mt3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\CentralDuplicatas-master\Views\Cad\CadJuridico.cshtml"
  
    ViewData["Title"] = "Cadastro jurídico";

#line default
#line hidden
            BeginContext(55, 1119, true);
            WriteLiteral(@"
<script src=""https://unpkg.com/vue""></script>
<script src=""//cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js""></script>

<section class=""hero infoc blue"">
    <div class=""hero-body mt5"">
        <div class=""container has-text-centered"">
            <titulocadastro id=""tabscadastrotitle""  class=""title"">Olá!<br> Preencha os campos para prosseguir</titulocadastro>
        </div>
    </div>

    <div class=""hero-foot"">
        <nav class=""tabs is-boxed is-fullwidth is-default"">
            <div class=""container"">
                <ul>
                    <li class=""tab is-active"" onclick=""openTab(event,'WebDev')"">
                        <a>Dados da Empresa</a></li>
                    <li class=""tab"" onclick=""openTab(event,'cadastroadministrador')""><a>Dados do Administrador</a></li>
                    <li class=""tab"" onclick=""openTab(event,'cadastrousuarios')""><a>Dados do Usuário</a></li>
                </ul>
            </div>
        </nav>
    </div>
</section>

<div id=""na");
            WriteLiteral("vbarcad\">\r\n</div>\r\n<div id=\"WebDev\" class=\"content-tab\">\r\n    <div class=\"\" id=\"cad\">\r\n        ");
            EndContext();
            BeginContext(1174, 7926, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d4ffa33663994e6a90bb236e367092e2", async() => {
                BeginContext(1180, 1335, true);
                WriteLiteral(@"
            <div v-if=""step === 1"">
                <div class=""mt5"">
                    <div id=""cadastro"" class=""columns is-desktop"">
                         <div class=""container"">
        <div class=""row"">
            <div class=""col-sm-6"">
                            <div class=""mt4"">
                                        <label class=""label mt3"">CNPJ</label>
                                        <input class=""input"" id=""cnpj"" type=""text"" name=""cnpj"" data-validate=""cnpj"" placeholder=""00.000.000/0000-00"" v-model=""dados.entity.cnpj"">
                                        <label class=""label mt3"">Razão Social</label>
                                        <input class=""input"" data-validate=""text"" v-model=""dados.entity.fullname"">
                                        <label class=""label mt3"">Nome Fantasia</label>
                                        <input class=""input"" data-validate=""text"" style=""margin-bottom: 0.75rem"" v-model=""dados.entity.aliasname"">
                         ");
                WriteLiteral(@"               <label class=""label mt1"">Atividade</label>
                                        <div class=""control"">
                                            <div class=""select is-fullwidth"">
                                                <select>
                                                    ");
                EndContext();
                BeginContext(2515, 38, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "2d5f2ab610cb407a860851f33fe51e88", async() => {
                    BeginContext(2523, 21, true);
                    WriteLiteral("Selecione a atividade");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2553, 54, true);
                WriteLiteral("\r\n                                                    ");
                EndContext();
                BeginContext(2607, 29, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "112250a3339644e583b4189b174f796e", async() => {
                    BeginContext(2615, 12, true);
                    WriteLiteral("With options");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(2636, 2690, true);
                WriteLiteral(@"
                                                </select>
                                            </div>
                                        </div>
                                    <div>
                                        <label class=""label mt1"">Email</label>
                                        <input class=""input"" v-model=""dados.emails.address"" label=""Email"">
                                        <div class=""columns"" v-for=""(telephones, index) in dados.telephones"">
                                            <div class=""column is-2"">
                                                <label class=""label mt1"">DDD</label>
                                                <input class=""input"" v-model=""telephones.ddd"">
                                            </div>
                                            <div class=""column is-7"">
                                                <label class=""label mt1"">Telefone</label>
                                                <input");
                WriteLiteral(@" type=""text"" data-validate=""brPhone"" class=""input"" v-model=""telephones.number"">
                                            </div>
                                            <div class=""column is-3"">
                                                 <label class=""label mt1"">Adicionar campo</label>
                                            <i class=""fa fa-trash fa-2x"" aria-hidden=""true"" v-on:click.prevent=""deleteUser(index)"" style=""padding-right: 1cm""></i>
                                            <i class=""fa fa-plus fa-2x"" aria-hidden=""true""v-on:click.prevent=""addUser""></i>
                                            </div>
                                        </div>

                                    </div>

                                    <div class=""mt4 mb5 column is-paddingless is-10-touch is-4-desktop flexd"">
                                        <button v-on:click.prevent=""next()"" class=""button is-info"">Próximo</button>
                                    </div>
           ");
                WriteLiteral(@"                     </div>
                        </div>
                        </div>
                       
                         <div class=""col-sm-6"">
                         <infocadastro></infocadastro>
                            </div>
                    </div>
                  
                </div>
            </div>
           
            <div v-if=""step === 2"">
                <div class=""mt5"">
                    <div id=""cadastro1"" class=""columns is-desktop"">
                        <div class=""column is-10-touch is-offset-1-touch is-4-desktop is-offset-2-desktop"">
                            ");
                EndContext();
                BeginContext(5326, 1672, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "04e22910204e4074a7c25c694003f967", async() => {
                    BeginContext(5360, 1631, true);
                    WriteLiteral(@"
                                    <div class=""control"">
                                        <label class=""label mt1"">CEP</label>
                                        <input type=""text"" class=""input"" v-model=""cep"" v-on:keyup=""searchCep()"" placeholder=""digite o cep aqui (sem hífen)"">
                                        <span v-if=""message"" class=""help is-danger"">CEP não encontrado.</span>
                                        <label class=""label mt1"">Cidade</label>
                                        <input class=""input"" v-model=""dados.userInfoModel.address.city"">
                                        <label class=""label mt1"">UF</label>
                                        <input class=""input"" v-model=""dados.userInfoModel.address.state"">
                                        <label class=""label mt1"">Endereço</label>
                                        <input class=""input"" v-model=""dados.userInfoModel.address.thoroughfare"">
                                        <label ");
                    WriteLiteral(@"class=""label mt1"">Numero</label>
                                        <input class=""input"" v-model=""dados.userInfoModel.address.number"">
                                        <label class=""label mt1"">Bairro</label>
                                        <input class=""input"" v-model=""dados.userInfoModel.address.neighborhood"">
                                        <label class=""label mt1"">Complemento</label>
                                        <input class=""input"" v-model=""dados.userInfoModel.address.complement"">
                                    </div>
                            ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(6998, 2095, true);
                WriteLiteral(@"
                               <div class=""control"">
                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info""id=""checkboxEmail"" type=""checkbox"" name=""checkboxEmail"">
                                <label for=""checkboxEmail"">Concordo em receber notificações por e-mail</label>
                            </div>
                        </div>
                        <div class=""container mt4"">
                        <h4><b>ADESÃO</b></h4>
                        <p> Para prosseguir, é necessário dar aceite no termo de adesão, declarando estar <br> de acordo com as condicões de utilização da Central de Duplicatas</p>
                        <div class=""columns mt2"">
                        <div class=""column is-2"">
                        <p>Visualizar o termo de adesão</p>
                        </div>
                         <div class=""column is-10""> <i class=""fa fa-file-text-o fa-2x"" v-on:click=""modal = !modal"" aria-hid");
                WriteLiteral(@"den=""true""></i>
                         </div>
                         </div>
                         <div class=""columns"">
                        <div class=""column is-2""><p>Assinar termo de adesão com e-CNPJ</p>
                        </div>
                         <div class=""column is-6""><button class=""button is-info is-small"" style=""height:60px"" style=""font-size:1%"" >Continuar utilizando <br>certificado Digital</button>
                         </div>
                         </div>
                        </div>
                        
                            <div class=""mt5 mb5 column is-paddingless is-10-touch is-4-desktop flexd"">
                                <button v-on:click.prevent=""prev()"" class=""button is-light"">Anterior</button>
                                <button v-on:click.prevent=""submit()"" class=""button is-info"">Salvar</button>
                            </div>
                            </div>
                        </div>
                    </div>
 ");
                WriteLiteral("               </div>\r\n        </div>\r\n        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9100, 3862, true);
            WriteLiteral(@"
    
    <div v-bind:class=""{'is-active': modal}"" class=""modal"">
      <div class=""modal-background""></div>
      <div class=""modal-card"">
        <header class=""modal-card-head"">
          <p class=""modal-card-title"">Leia e concorde com os termos antes de prosseguir</p>
          <button v-on:click=""modal = !modal"" class=""delete"" aria-label=""close""></button>
        </header>
        <section class=""modal-card-body"">
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta praesentium maiores sed beatae corporis est doloremque error, amet obcaecati quam aut natus odit exercitationem eveniet deleniti? Est, qui. Provident, pariatur?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta praesentium maiores sed beatae corporis est doloremque error, amet obcaecati quam aut natus odit exercitationem eveniet deleniti? Est, qui. Provident, pariatur?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique omnis e");
            WriteLiteral(@"t at esse natus harum nulla autem? Iste quas sed, perspiciatis, dolore, omnis fugit aliquid commodi repellendus numquam ratione facilis!</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Duci");
            WriteLiteral(@"mus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita p");
            WriteLiteral(@"rovident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>       
                        <div class=""field mb2"">
                        <div style=""text-align: center""> 
                        <input  v-on:click=""termoschecked = !termoschecked"" class=""is-checkradio is-info"" id=""termoscheckbox"" type=""checkbox"" name=""termoscheckbox"">
                        <label for=""termoscheckbox"">Concordo</label>
                    </div>
                     </section>
            <footer class=""card-footer"">
            <a v-bind:disabled=""termoschecked"" href=""#"" class=""button is-info card-footer-item"">Avançar</a>
            </footer>
      </div>
    </div> 
    </div>
</div>
<div id=""cadastroadministrador"" class=""content-tab"" style=""display:none"">
    ");
            EndContext();
            BeginContext(12962, 8585, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "fd01470d939c4bd68e73587d3ac3df58", async() => {
                BeginContext(12968, 4961, true);
                WriteLiteral(@"
        <div v-if=""step === 1"">
            <div class=""mt5"">
                <div id=""cadastro"" class=""columns is-desktop"">
                    <div class=""column is-10-touch is-offset-1-touch is-4-desktop is-offset-2-desktop"">
                            <div class=""mt4"">
                                <div>
                                    <label class=""label mt3"">CPF</label>
                                    <input class=""input"" id=""cpf"" type=""text"" name=""cpf"" data-validate=""cpf"" placeholder=""000.000.000-00"" maxlength=""14"" v-model=""dados.document"">
                                    <label class=""label mt3"">Nome Completo</label>
                                    <input class=""input"" data-validate=""text"" v-model=""dados.fullName"">
                                    <label class=""label mt3"">Data de nascimento</label>
                                    <input class=""input"" data-validate=""date"" style=""margin-bottom: 0.75rem"" v-model=""dados.birthDate"">
                                </");
                WriteLiteral(@"div>
                                <div>
                                    <label class=""label mt1"">Email</label>
                                    <input class=""input"" v-model=""dados.emails.address"" label=""Email"">
                                    <label class=""label mt2"">Confirmação Email</label>
                                    <input class=""input"" v-model=""dados.emails.address"" label=""Email"">
                                    <div class=""columns"">
                                        <div class=""column is-4"">
                                            <div class=""checkradio100 mt1"">
                                                <input class=""is-checkradio is-info"" id=""checkboxEmail"" type=""checkbox"" name=""checkboxEmail"">
                                                <label for=""checkboxEmail"">Receber notificações por e-mail</label></div>
                                        </div>
                                        <div class=""column is-6"">
                        ");
                WriteLiteral(@"                    <div class=""checkradio100 mt1"">
                                                <input class=""is-checkradio is-info"" id=""checkboxNews"" type=""checkbox"" name=""checkboxNews"">
                                                <label for=""checkboxNews"">Receber Newsletter</label></div>
                                        </div>
                                    </div>
                                    <div class=""columns"" v-for=""(telephones, index) in dados.telephones"">
                                        <div class=""column is-2"">
                                            <label class=""label mt1"">DDD</label>
                                            <input class=""input"" v-model=""telephones.ddd"">
                                        </div>

                                        <div class=""column is-7"">
                                            <label class=""label mt1"">Telefone</label>
                                            <input type=""text"" data-validate=""");
                WriteLiteral(@"brPhone"" class=""input"" v-model=""telephones.number"">
                                        </div>
                                        <div class=""column is-3"">
                                            <label class=""label mt1"">Adicionar campo</label>
                                            <i class=""fa fa-trash fa-2x"" aria-hidden=""true"" v-on:click.prevent=""deleteUser(index)"" style=""padding-right: 1cm""></i>
                                            <i class=""fa fa-plus fa-2x"" aria-hidden=""true""v-on:click.prevent=""addUser""></i>
                                            
                                        </div>
                                    </div>
                                    <div class=""control"">

                                        <div class=""checkradio100 mt1"">
                                            <input class=""is-checkradio is-info"" id=""checkboxSms"" type=""checkbox"" name=""checkboxSms"">
                                            <label for=""checkboxSm");
                WriteLiteral(@"s"">Receber notificações por SMS</label>
                                        </div>
                                    </div>
                                </div>

                                <div class=""mt4 mb5 column is-paddingless is-10-touch is-4-desktop flexd"">
                                    <button v-on:click.prevent=""next()"" class=""button is-info"">Próximo</button>
                                </div>
                        </div>
                    </div>
                    <infocadastro></infocadastro>
                </div>
            </div>
        </div>
        <div v-if=""step === 2"">
            <div class=""mt5"">
                <div id=""cadastro1"" class=""columns is-desktop"">
                    <div class=""column is-10-touch is-offset-1-touch is-4-desktop is-offset-2-desktop"">
                        ");
                EndContext();
                BeginContext(17929, 1600, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1d5584981a984922832aef39a8beab82", async() => {
                    BeginContext(17963, 1559, true);
                    WriteLiteral(@"
                                <div class=""control"">
                                    <label class=""label mt1"">CEP</label>
                                    <input type=""text"" class=""input"" v-model=""cep"" v-on:keyup=""searchCep()"" placeholder=""digite o cep aqui (sem hífen)"">
                                    <span v-if=""message"" class=""help is-danger"">CEP não encontrado.</span>
                                    <label class=""label mt1"">Cidade</label>
                                    <input class=""input"" v-model=""dados.userInfoModel.address.city"">
                                    <label class=""label mt1"">UF</label>
                                    <input class=""input"" v-model=""dados.userInfoModel.address.state"">
                                    <label class=""label mt1"">Endereço</label>
                                    <input class=""input"" v-model=""dados.userInfoModel.address.thoroughfare"">
                                    <label class=""label mt1"">Numero</label>
          ");
                    WriteLiteral(@"                          <input class=""input"" v-model=""dados.userInfoModel.address.number"">
                                    <label class=""label mt1"">Bairro</label>
                                    <input class=""input"" v-model=""dados.userInfoModel.address.neighborhood"">
                                    <label class=""label mt1"">Complemento</label>
                                    <input class=""input"" v-model=""dados.userInfoModel.address.complement"">
                                </div>
                        ");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(19529, 2011, true);
                WriteLiteral(@"
                        <div class=""control"">
                            <div class=""checkradio100 mt1"">
                                <input class=""is-checkradio is-info"" id=""exampleCheckbox19"" type=""checkbox"" name=""exampleCheckbox"">
                                <label for=""exampleCheckbox19"">Concordo em receber notificações por e-mail</label>
                            </div>
                        </div>
                        <div class=""container mt4"">
                        <h4><b>ADESÃO</b></h4>
                        <p> Para prosseguir, é necessário dar aceite no termo de adesão, declarando estar <br> de acordo com as condicões de utilização da Central de Duplicatas</p>
                        <div class=""columns mt2"">
                        <div class=""column is-2"">
                        <p>Visualizar o termo de adesão</p>
                        </div>
                         <div class=""column is-10""> <i class=""fa fa-file-text-o fa-2x"" v-on:click=""modal = !modal"" aria");
                WriteLiteral(@"-hidden=""true""></i>
                         </div>
                         </div>
                         <div class=""columns"">
                        <div class=""column is-2""><p>Assinar termo de adesão com e-CNPJ</p>
                        </div>
                         <div class=""column is-6""><button class=""button is-info is-small"" style=""height:60px"" style=""font-size:1%"" >Continuar utilizando <br>certificado Digital</button>
                         </div>
                         </div>
                        </div>

                        <div class=""mt5 mb5 column is-paddingless is-10-touch is-offset-1-touch is-4-desktop flexd"">

                            <button v-on:click.prevent=""prev()"" class=""button is-light"">Anterior</button>
                            <button v-on:click.prevent=""submit()"" class=""button is-info"">Salvar</button>
                        </div>
                    </div>
                </div>
            </div>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(21547, 3835, true);
            WriteLiteral(@"
    </div>
    <div v-bind:class=""{'is-active': modal}"" class=""modal"">
      <div class=""modal-background""></div>
      <div class=""modal-card"">
        <header class=""modal-card-head"">
          <p class=""modal-card-title"">Leia e concorde com os termos antes de prosseguir</p>
          <button v-on:click=""modal = !modal"" class=""delete"" aria-label=""close""></button>
        </header>
        <section class=""modal-card-body"">
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta praesentium maiores sed beatae corporis est doloremque error, amet obcaecati quam aut natus odit exercitationem eveniet deleniti? Est, qui. Provident, pariatur?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Soluta praesentium maiores sed beatae corporis est doloremque error, amet obcaecati quam aut natus odit exercitationem eveniet deleniti? Est, qui. Provident, pariatur?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Similique o");
            WriteLiteral(@"mnis et at esse natus harum nulla autem? Iste quas sed, perspiciatis, dolore, omnis fugit aliquid commodi repellendus numquam ratione facilis!</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi");
            WriteLiteral(@"? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expedita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>
                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium, perspiciatis corrupti. Repellat itaque sunt quam sint inventore aliquid, voluptatum velit placeat officia. Voluptatem velit quia esse iusto possimus aliquid beatae! Lorem ipsum, dolor sit amet consectetur adipisicing elit. Nisi itaque dolores, debitis veniam tenetur ex consequuntur modi? Ducimus ratione assumenda expe");
            WriteLiteral(@"dita provident aut dolorem facilis corrupti pariatur. Harum, praesentium fuga?</p>       
                        <div class=""field mb2"">
                        <div style=""text-align: center""> 
                        <input  v-on:click=""termoschecked = !termoschecked"" class=""is-checkradio is-info"" id=""termoscheckbox"" type=""checkbox"" name=""termoscheckbox"">
                        <label for=""termoscheckbox"">Concordo</label>
                    </div>
                     </section>
            <footer class=""card-footer"">
            <a v-bind:disabled=""termoschecked"" href=""#"" class=""btn btn-primary"">Avançar</a>
            </footer>
      </div>
    </div> 
</div>
<div id=""cadastrousuarios"" class=""content-tab"" style=""display:none"">
    ");
            EndContext();
            BeginContext(25382, 4169, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "19f0acb814b046279ca751cbedef5967", async() => {
                BeginContext(25388, 4156, true);
                WriteLiteral(@"
        <div class=""container mt5"">
                        <div class=""mt4"">
                            <div v-for=""(user, index) in users"">
                            <label class=""label mt3"">CPF</label>
                            <input class=""input"" data-validate=""cpf"" placeholder=""000.000.000-00"" v-model=""user.cpf""><br>
                            <label class=""label mt3"">Nome completo</label>
                            <input class=""input"" data-validate=""text"" v-model=""user.nome"">
                            <label class=""label mt3"">Celular</label>
                            <input class=""input"" data-validate=""brPhone"" v-model=""user.celular"">
                            <label class=""label mt3"">E-mail</label>
                        <input class=""input"" v-model=""user.email"">
                        <label class=""label mt3"">Confirmar e-mail</label>
                        <input class=""input"" v-model=""user.confirmaremail"">
                        <label class=""label mt3"">Autorizações<");
                WriteLiteral(@"/label>
                        <div class=""columns"">
                            <div class=""column is-6"">
                                <div class=""checkradio100 mt1"">
                                    <input style=""margin:center"" class=""is-checkradio is-info"" id=""checkboxValidar"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxValidar"">Carregar e validar duplicatas</label>
                                </div>
                            </div>
                            <div class=""column is-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxAceite"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxAceite"">Dar aceite/recusar duplicata</label>
                                </div>
                            </div>
                        </div>
                        <div class=""columns"">");
                WriteLiteral(@"
                            <div class=""column is-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxAutorizar"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxAutorizar"">Autorizar transferência de titularidades de duplicatas</label>
                                </div>
                            </div>
                            <div class=""column is-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxInformar"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxInformar"">Informar entrega e liquidação</label>
                                </div>
                            </div>
                        </div>
                        <div class=""columns"">
                            <div class=""");
                WriteLiteral(@"column is-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxEnviar"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxEnviar"">Enviar duplicatas para Protesto</label>
                                </div>
                            </div>
                            <div class=""column is-6"">
                                <div class=""checkradio100 mt1"">
                                    <input class=""is-checkradio is-info"" id=""checkboxEndosso"" type=""checkbox"" name=""exampleCheckboxa"">
                                    <label for=""checkboxEndosso"">Informar endosso</label>
                                </div>
                            </div>
                        </div>
                        <button class=""btn btn-primary"" v-on:click.prevent=""deleteUser(index)"">Deletar</button>
                        <button class=""btn btn-primary"" v-on");
                WriteLiteral(":click.prevent=\"addUser\">Novo Usuário</button>\r\n            ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(29551, 329, true);
            WriteLiteral(@"
        </div>
    </div>
    </div>

    </div>
    <div class=""mb4"" style=""text-align: center"">
    <div style=""text-align: center"">
                <button class=""btn btn-primary"" v-on:click.prevent=""enviar"">Enviar convite</button>
            </div>
        </div>
    </div>

</div>
</div>
</div>
</div>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
